# Trong repo public: Datatechub/remox-release/.github/workflows/cleanup-source-code.yml

name: Scheduled and On-Demand Source Code Cleanup

on:
  # Cho ph√©p g·ªçi workflow n√†y t·ª´ m·ªôt workflow kh√°c
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'The tag of the release to clean (e.g., v1.0.33)'
        required: true
  
  # Th√™m m·ªôt l·ªãch ch·∫°y d·ª± ph√≤ng (v√≠ d·ª•: m·ªói 6 ti·∫øng) ƒë·ªÉ d·ªçn d·∫πp n·∫øu c√≥ g√¨ ƒë√≥ b·ªã s√≥t
  schedule:
    - cron: '0 */6 * * *'

jobs:
  cleanup-assets:
    runs-on: ubuntu-latest
    permissions:
      contents: write # C·∫•p quy·ªÅn ƒë·ªÉ x√≥a asset

    steps:
      # S·ª¨A L·ªñI: Th√™m b∆∞·ªõc checkout ƒë·ªÉ t·∫°o m√¥i tr∆∞·ªùng Git h·ª£p l·ªá
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: üè∑Ô∏è Get Target Tag
        id: get_tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
          else
            # L·∫•y tag c·ªßa release m·ªõi nh·∫•t khi ch·∫°y theo l·ªãch
            echo "TAG_NAME=$(gh release list --limit 1 --json tagName -q '.[0].tagName')" >> $GITHUB_ENV
          fi

      - name: üóëÔ∏è Wait and Delete Source Code Archives
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # N·∫øu kh√¥ng c√≥ tag th√¨ tho√°t
          if [ -z "${{ env.TAG_NAME }}" ]; then
            echo "No tag specified or found. Exiting."
            exit 0
          fi
          
          echo "üßπ Targeting release: ${{ env.TAG_NAME }}"
          
          # Ch·ªù ƒë·ª£i ki√™n nh·∫´n ƒë·ªÉ ƒë·∫£m b·∫£o GitHub ƒë√£ t·∫°o xong assets
          echo "‚è≥ Waiting for 30 seconds to allow assets to be generated..."
          sleep 30
          
          gh release delete-asset "${{ env.TAG_NAME }}" "Source code (zip)" --yes || echo "‚ÑπÔ∏è 'Source code (zip)' not found."
          gh release delete-asset "${{ env.TAG_NAME }}" "Source code (tar.gz)" --yes || echo "‚ÑπÔ∏è 'Source code (tar.gz)' not found."

      - name: ‚úÖ Verify Final Assets
        if: env.TAG_NAME != '' # Ch·ªâ ch·∫°y n·∫øu c√≥ tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "‚úÖ Cleanup attempt complete. Final assets for ${{ env.TAG_A_NAME }}:"
          gh release view "${{ env.TAG_NAME }}" --json assets --jq '.assets[].name'
