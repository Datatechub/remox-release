# ƒê·∫∑t file n√†y trong: remox-release/.github/workflows/cleanup-source.yml

name: Cleanup Source Code

on:
  release:
    types: [published, created]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag to clean (e.g., v1.0.17)'
        required: false

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: üßπ Auto cleanup source code
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # X√°c ƒë·ªãnh tag
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ -n "${{ github.event.inputs.tag }}" ]; then
              TAG="${{ github.event.inputs.tag }}"
            else
              # L·∫•y release m·ªõi nh·∫•t
              TAG=$(gh release list --repo ${{ github.repository }} --limit 1 --json tagName -q '.[0].tagName')
            fi
          else
            TAG="${{ github.event.release.tag_name }}"
          fi
          
          echo "üè∑Ô∏è Cleaning release: $TAG"
          
          # Function x√≥a v·ªõi retry
          cleanup() {
            echo "üîç Looking for source code files..."
            
            # Li·ªát k√™ assets
            gh release view "$TAG" \
              --repo ${{ github.repository }} \
              --json assets \
              --jq '.assets[] | select(.name | startswith("Source code")) | .name' | while read -r asset; do
              
              if [ ! -z "$asset" ]; then
                echo "  üóëÔ∏è Deleting: $asset"
                gh release delete-asset "$TAG" "$asset" \
                  --repo ${{ github.repository }} \
                  --yes 2>/dev/null || true
              fi
            done
          }
          
          # X√≥a nhi·ªÅu l·∫ßn
          for i in {1..5}; do
            echo ""
            echo "Attempt #$i"
            cleanup
            
            # Ki·ªÉm tra c√≤n source kh√¥ng
            REMAINING=$(gh release view "$TAG" \
              --repo ${{ github.repository }} \
              --json assets \
              --jq '[.assets[] | select(.name | startswith("Source code"))] | length')
            
            if [ "$REMAINING" -eq "0" ]; then
              echo "‚úÖ All source code removed!"
              break
            fi
            
            if [ $i -lt 5 ]; then
              echo "‚è≥ Waiting 10 seconds..."
              sleep 10
            fi
          done
          
          # Hi·ªÉn th·ªã k·∫øt qu·∫£ final
          echo ""
          echo "üì¶ Final assets:"
          gh release view "$TAG" \
            --repo ${{ github.repository }} \
            --json assets \
            --jq '.assets[] | "  ‚úÖ \(.name) (\(.size / 1024 / 1024 | floor)MB)"'
